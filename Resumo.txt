C# é uma linguagem tipada, ou seja, é nescessário especificar os tipos do dados que estão sendo usados, além de ser focada em orientação de objetos

Na criação de variaveis é usado os seguintes tipos de valores:

int = usada para números inteiros como 1, 2, 3, 4, 5, etc... // Integer (whole number)
double = usada para números com casas decimais como 1.23, 9.99, etc...  // Floating point number
string = usada para textos como "Hello World" // String
bool = usada para true e false  // Boolean
char = usada para apenas uma letra como A, B, C etc.. // Character

Obs: O "float" e o "double" quando usados para criar a variável é nescessário colocar o F no final para o "float" e o D no final para "double"


Conversão de tipos em C#:

Isso se chama Type Casting e tem a função de mudar o tipo da variável

Em C# exite duas maneiras de fazer isso:

-----------------------------------------------------------------------------------------
Maneira implicta(automatica)
Converte do menor pro maior
char -> int -> long -> float -> double

Ex: int myInt = 9;
double myDouble = myInt;       // Automaticamente faz com que o int se torne double

Console.WriteLine(myInt);      // sobrepoe 9
Console.WriteLine(myDouble);   // sobrepoe 9
------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------
Maneira explicita(manual)
Converte do maior pro menos
double -> float -> long -> int -> char

Ex: double myDouble = 9.78;
    int myInt = (int) myDouble;    // Manualmente converteu double para int usando os paranteses com o int

Console.WriteLine(myDouble);   // sobrepoe 9.78
Console.WriteLine(myInt);      // sobrepoe 9
------------------------------------------------------------------------------------------

Podemos converter usando os seguintes metódos também:

Console.WriteLine(Convert.ToString(myInt));    // convert int to string
Console.WriteLine(Convert.ToDouble(myInt));    // convert int to double
Console.WriteLine(Convert.ToInt32(myDouble));  // convert double to int
Console.WriteLine(Convert.ToString(myBool));   // convert bool to string

Criar métodos ou funções 

Um método é um bloco de código que contém uma série de instruções. Um programa faz com que as instruções sejam executadas chamando o método e especificando os argumentos de método necessários. No C#, todas as instruções executadas são realizadas no contexto de um método.

Ex:
Criando um método dentro da classe program

class Program
{
  static void MyMethod() 
  {
    // code to be executed
  }
} 

Exemplo explicado:

MyMethod() nome do método
static significa que que o método pertence a classe program e não é um objeto da classe.
void singifica que o método não tem um return

Para chamar um método basta colocar o nome dele junto de paranteses

Ex:

{
  Console.WriteLine("I just got executed!");
}

static void Main(string[] args)
{
  MyMethod();
}

Dentro de Main o método MyMethod() foi chamado ↟

Criando objetos:

sintaxe:

Nome da classe + nome da variável = new + nome da classe()

M   odificadores de acesso

 -public: Atributos e métodos visiveis para todas as classes
 -private: Atributos e métodos visiveis apenas para a classe one são criados
 -protected:  Atributos e métodos visiveis em classes onde são criados ou herdados



